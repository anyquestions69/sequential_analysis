 ВОЕННО-КОСМИЧЕСКАЯ АКАДЕМИЯ ИМЕНИ А.Ф.МОЖАЙСКОГО Кафедра Систем сбора и обработки информации (наименование кафедры) (Гриф секретности) Экз. № ____ УТВЕРЖДАЮ Начальник 61 кафедры полковник Д.Бирюков (воинское звание, подпись, инициал имени, фамилия) «____» ___________ 20__ г. Автор: доцент кафедры кандидат технических наук подполковник (должность, ученая степень, ученое и воинское звание, А.Киселев инициал имени, фамилия) Лекция №15 Тема: Организация файловой системы. Основные каталоги ФС (наименование темы лекции по тематическому плану изучения дисциплины) по дисциплине Операционные системы (наименование дисциплины) Обсуждено и одобрено на заседании кафедры (предметно-методической комиссии) «____» ____________ 20__ г. протокол № ______ Санкт-Петербург 2018 Содержание занятия и время Введение – 5 мин. Учебные вопросы (основная часть) 1. Физическая структура файловой системы в ОС Unix – 20 мин. (наименование вопроса лекции, время) 2. Логическая организация файловой системы OC UNIX – 20 мин. (наименование вопроса лекции, время) 3. Атрибуты файлов и каталогов – 20 мин. (наименование вопроса лекции, время) 4. Основные каталоги файловой системы ОС UNIX – 20 мин. (наименование вопроса лекции, время) Заключение-5 мин. Литература: Основная: 1. Робачевский А. Операционная система UNIX. - Спб.: BHV, 2008. – 20-28с. (наименование издания, страницы) Дополнительная: 1. Самонов А.А. Основы профессиональной работы в среде ОС Unix -. Спб.: ВИКА им. А.Ф.Можайского, 2001 (наименование издания, страницы) Материально-техническое обеспечение: 1. Наглядные пособия (по данным учета кафедры): Слайды к вводной лекции. 2. Технические средства обучения: Проектор с ноутбуком. Введение В лекции описываются основные принципы функционирования файловой системы ОС Unix. Рассматриваются физическая и логическая организация ФС Unix. Учебные вопросы (основная часть): Учебный вопрос №1. Физическая структура ФС ОС Unix Каждый жесткий диск состоит из одной или нескольких логических частей (групп цилиндров), называемых разделами (partitions). Расположение и размер раздела определяется при форматировании диска. В ОС UNIX разделы выступают в качестве независимых устройств, доступ к которым осуществляется как к различным носителям данных. Обычно в разделе может располагаться только одна физическая файловая система. Физическая файловая система UNIX занимает раздел диска и состоит из таких основных компонентов: Суперблок (superblock). Содержит общую информацию о файловой системе. Массив индексных дескрипторов (ilist). Содержит метаданные всех файлов файловой системы. Индексный дескриптор (inode) содержит информацию о статусе файла и указывает на расположение данных этого файла. Ядро обращается к индексному дескриптору по индексу в массиве. Один дескриптор является корневым для физической файловой системы, через него обеспечивается доступ к структуре каталогов и файлов после монтирования файловой системы. Размер массива индексных дескрипторов является фиксированным и задается при создании физической файловой системы. Блоки хранения данных. Данные обычных файлов и каталогов хранятся в блоках. Обработка файла осуществляется через индексный дескриптор, содержащий ссылки на блоки данных. Суперблок Суперблок содержит информацию, необходимую для монтирования и управления файловой системой в целом. В каждой файловой системе существует только один суперблок, который располагается в начале раздела. Суперблок считывается в память ядра при монтировании файловой системы и находиться там до ее отключения - демонтирования. Суперблок содержит: • тип файловой системы; • размер файловой системы в логических блоках, включая сам суперблок, массив индексных дескрипторов и блоки хранения данных; • размер массива индексных дескрипторов; • количество свободных блоков; • количество свободных индексных дескрипторов; • флаги; • размер логического блока файловой системы (512, 1024, 2048, 4096, 8192). • список номеров свободных индексных дескрипторов; • список адресов свободных блоков. Поскольку количество свободных индексных дескрипторов и блоков хранения данных может быть значительным, хранение двух последних списков целиком в суперблоке непрактично. Для индексных дескрипторов храниться только часть списка. Когда число свободных дескрипторов приближается к 0, ядро просматривает список и вновь формирует список свободных дескрипторов. Такой подход неприемлем в отношении свободных блоков хранения данных, поскольку по содержимому блока нельзя определить, свободен он или нет. Поэтому необходимо хранить список адресов свободных блоков целиком. Список адресов свободных блоков может занимать несколько блоков хранения данных, но суперблок содержит только один блок этого списка. Первый элемент этого блока указывает на блок, хранящий продолжение списка. Выделение свободных блоков для размещения файла производиться с конца списка суперблока. Когда в списке остается единственный элемент, ядро интерпретирует его как указатель на блок, содержащий продолжение списка. В этом случае содержимое этого блока считывается в суперблок, и блок становится свободным. Такой подход позволяет использовать дисковое пространство под списки, пропорциональное свободному месту в файловой системе. Когда свободного места практически не остается, список адресов свободных блоков целиком помещается в суперблоке. Индексные дескрипторы Индексный дескриптор, или inode, содержит информацию о файле, необходимую для обработки данных, т.е. метаданные файла. Каждый файл ассоциирован с одним индексным дескриптором, хотя может иметь несколько имен (жестких связей) в файловой системе, каждое из которых указывает на один и тот же индексный дескриптор. Индексный дескриптор не содержит: имени файла, которое содержится в блоках хранения данных каталога; содержимого файла, которое размещено в блоках хранения данных. Индексный дескриптор содержит: • номер; • тип файла; • права доступа к файлу; • количество связей (ссылок на файл в каталогах) файла; • идентификатор пользователя и группы-владельца; • размер файла в байтах; • время последнего доступа к файлу; • время последнего изменения файла; • время последнего изменения индексного дескриптора файла; • указатели на блоки данных файла (обычно 10); • указатели на косвенные блоки (обычно 3). Размер индексного дескриптора обычно составляет 128 байтов. Индексный дескриптор содержит информацию о расположении данных файла. Поскольку дисковые блоки хранения данных, в общем случае, располагаются не последовательно, индексный дескриптор должен хранить физические адреса всех блоков, принадлежащих данному файлу. Каждый дескриптор содержит 13 указателей. Первые 10 указателей непосредственно ссылаются на блоки данных файла. Если файл большего размера - 11-ый указатель ссылается на первый косвенный блок (indirection block) из 128 (256) ссылок на блоки данных. Если и этого недостаточно, 12-ый указатель ссылается на дважды косвенный блок, содержащий 128 (256) ссылок на косвенные блоки. Наконец последний, 13-ый указатель ссылается на трижды косвенный блок из 128 (256) ссылок на дважды косвенные блоки. Количество элементов в косвенном блоке зависит от его размера. Поддерживая множественные уровни косвенности, индексные дескрипторы позволяют отслеживать огромные файлы, не растрачивая дисковое пространство для небольших файлов. Файлы любой файловой системы становятся доступными только после "монтирования" этой файловой системы. Файлы "не смонтированной" файловой системы не являются видимыми операционной системой. Для монтирования файловой системы используется системный вызов mount. Монтирование файловой системы означает следующее. В имеющемся к моменту монтирования дереве каталогов и файлов должен иметься листовой узел - пустой каталог (в терминологии UNIX такой каталог, используемый для монтирования файловой системы, называется directory mount point - точка монтирования). В любой файловой системе имеется корневой каталог. Во время выполнения системного вызова mount корневой каталог монтируемой файловой системы совмещается с каталогом - точкой монтирования, в результате чего образуется новая иерархия с полными именами каталогов и файлов. Смонтированная файловая система впоследствии может быть отсоединена от общей иерархии с использованием системного вызова umount. Для успешного выполнения этого системного вызова требуется, чтобы отсоединяемая файловая система к этому моменту не находилась в использовании (т.е. ни один файл из этой файловой системы не был открыт). Корневая файловая система всегда является смонтированной, и к ней не применим системный вызов umount. Учебный вопрос №2. Логическая организация файловой системы OC UNIX. Учебный вопрос №3. Атрибуты файлов и каталогов Обращение к файлам и каталогам в ОС UNIX осуществляется только при наличии у процесса (пользователя запустившего процесс) соответствующих по отношению к данному объекту прав. Перечень допустимых с файлом (каталогом) операций определяется с помощью таких категорий как атрибуты владения и права доступа. Для управления файлами и каталогами ядро операционной системы UNIX, как известно, использует так называемые индексные дескрипторы или описатели файлов. В англоязычной литературе этому понятию соответствует термин - inodes. Этот элемент содержит всю необходимую для управления файлом информацию. Давайте рассмотрим подробнее, какие атрибуты хранятся в описателях, и каким образом эту информацию можно получить. В описателе хранится информация о том, кто является владельцем файла, к какому типу относится файл, его размеры, атрибуты доступа, время последнего обращения, последней модификации и адреса блоков на диске, содержащих данные этого файла (см. Таблица 1). Каждый описатель имеет уникальный номер, который используется системой в операциях обработки файла. Имя файла - это просто идентификатор, который облегчает людям работу с данными, хранящимися в файловой системе. К одной и той же совокупности блоков данных, представляющих конкретный файл, можно обращаться с помощью разных имён. При этом каждый файл имеет один единственный описатель. Имен же у одного файла, т.е. совокупности блоков, содержащих данные файла, может быть несколько. Разные имена для одного и того же файла можно создать, например, с помощью механизма жестких ссылок. Учебный вопрос №4. Основные каталоги файловой системы ОС UNIX Рис. Файловая система ОС Unix Все файлы, с которыми могут манипулировать пользователи, располагаются в файловой системе, представляющей собой дерево, промежуточные вершины которого соответствуют каталогам, и листья - файлам и пустым каталогам. Примерная структура файловой системы ОС UNIX показана на рисунке. Реально на каждом логическом диске (разделе физического дискового пакета) располагается отдельная иерархия каталогов и файлов. Для получения общего дерева в динамике используется "монтирование" отдельных иерархий к фиксированной корневой файловой системе. В каждом каталоге содержатся два специальных имени, имя ".", именующее сам этот каталог, и имя "..", именующее "родительский" каталог данного каталога, т.е. каталог, непосредственно предшествующий данному в иерархии каталогов. Различные реализации операционных систем семейства UNIX имеют практически одинаковые (или очень похожие) состав и структуру основных каталогов файловой системы. Символ / ( root)- корень дерева файловой системы. Все остальные каталоги и файлы располагаются в рамках структуры, порожденной корневым каталогом, независимо от их физического местонахождения, будь то файлы какого-либо раздела этого же или другого жесткого диска, файлы на CD-ROM или на дискете. Таким образом, каждый каталог является подкаталогом корневого каталога. Поэтому абсолютное путевое имя к файлу всегда начинается с символа /. /bin, /sbin и /usr/bin Эти каталоги содержат большинство команд операционной системы UNIX. При этом основные команды и системные утилиты UNIX содержатся в каталоге /bin , а прикладные программы, разработанные и используемые отдельными приложениями и группами пользователей содержатся в /sbin и /usr/bin. Каталоги bin и sbin можно встретить и в других частях файловой системы UNIX. Обычно они содержат исполняемые модули дополнительно устанавливаемых программных средств и продуктов. Например, утилиты инициализации и управления web - сервером Apache - httpd, или специальные среды разработки ПО типа C-Forge, rhide и т.д. Эти каталоги размещаются обычно вместе с конфигурационными и другими каталогами и файлами пакетным способом, например в каталоге /usr/local/Apache для web-сервера Apache. /dev Этот каталог содержит специальные файлы, предназначенные для организации обращения к внешним устройствам: от оперативной памяти до жёстких дисков и принтеров. Каталог /dev может содержать несколько подкаталогов, объединяющих специальные файлы устройств одного типа. Например, в ОС SCO Open Server подкаталог /dev/dsk содержит файлы устройств для работы с гибкими и жесткими дисками. В ОС Linux Slackware такое разделение на подкаталоги отсутствует. Обращение к жестким дискам осуществляется через специальные файлы, название которых начинается с букв hd или sd, соответственно для IDE и SCSI интерфейса. Например, обращение к жесткому диску, подключенному первым к SCSI интерфейсу, реализуется через файл /dev/sda0, где а - означает первый котроллер, 1- первый логический адрес на SCSI шине. Обращение к жесткому диску с IDE интерфейсом, подключенному к первому контроллеру в качестве master-диска - осуществляется через файл /dev/hda0. /etc - каталог содержит системные файлы конфигурации и специальные команды для выполнения административных функций. Среди наиболее важных из них - скрипты инициализации системы. Эти скрипты хранятся в файлах /etc/rc0.d, /etc/rc1.d, /etc/rc2.d и т.д., соответствующих уровням выполнения системы, и управляются скриптами /etc/rc0, /etc/rc1, /etc/rc2 и т.д. Во многих версиях BSD UNIX загрузка системы управляется другими скриптами, а именно /etc/rc.boot, /etc/rc и /etc/rc.local. В UNIX System V большинство исполняемых файлов перемещены из этого каталога в каталоги /sbin и /usr/sbin. В каталоге и также содержатся файлы passwd и groups, содержащие учетную информацию о пользователях системы и составе групп, в которые они объединяются. По аналогии с каталогом bin в файловой системе могут создаваться для дополнительно устанавливаемого ПО собственные подкаталоги etc, которые также как и подкаталоги bin размещаются единым пакетом. Кроме того, в UNIX System V в этом каталоге находится подкаталог /default, в котором хранятся используемые по умолчанию параметры ряда системных утилит. Так, например, в файле /etc/default/tar содержит параметры для программы tar, а в файле /etc/default/format - для утилиты форматирования дисков format. В подкаталогах X11, httpd, mail хранится информация о настройках системы X-Windows, Web-сервера и электронной почты соответственно. /usr - В этом каталоге находятся подкаталоги различных сервисных подсистем: - системы печати, - электронной почты (/usr/spool), - исполняемые файлы утилит UNIX (/usr/bin), - дополнительные программы, используемые на данном компьютере: (/usr/local/apache - программа и конфигурационные файлы Web-сервера), - файлы заголовков, используемые при разработке прикладных программ (/usr/include), электронные справочники (/usr/man) и т.д. /usr/spool - Этот каталог используется многими командами для хранения временных файлов или файлов в очереди. В частности этим каталогом пользуются программы печати и электронной почты. /usr/include - содержит заголовочные файлы, включаемые в тексты программ на языках программирования с целью использования модулей стандартных библиотек. Примеры: stdio.h, ctype.h, math.h, stdlib.h и др. Заголовочные файлы сгруппированы по подкаталогам в соответствии с тем, какие библиотеки используются и для каких компонентов ОС это ПО разрабатывается. /lib и /usr/lib Эти каталоги содержат множество файлов библиотеки прикладных программ для языка С и других языков программирования. Стандартные названия библиотечных файлов имеют вид libx.a (или libx.so), где х - это один или более символов, определяющих содержимое библиотеки. Например, стандартная библиотека С называется libc.a, а библиотека системы X-Windows имеет имя libX11.a. /opt - обычно используется для установки в него дополнительного ПО. На приведенном ниже рисунке представлено поддерево файловой системы, содержащее в числе прочих ПО для графической оболочки kde. В файловой системе Linux каталог opt содержит инструментальные средства и библиотеки для разработки программ на языке Java, ссылку на ПО kde и каталог RTSI. Убедитесь в этом самостоятельно. /var - В UNIX System V этот каталог является заменителем каталога /usr/spool, используемого для хранения временных файлов различных сервисных подсистем - печати, электронной почты и др. /tmp - каталог хранения временных файлов, необходимых для работы различных подсистем UNIX. /unix (SCO) или wmlinuz (Linux) Этот файл содержит ядpо ОС UNIX. Ядро представляет собой выполняемый файл, который загружается в оперативную память во время начальной загpузки операционной системы. По окончании последней ему (ядру) передаётся управление. /root - домашний каталог суперпользователя. /proc - служебная информация, используемая операционной системой для управления вычислительным процессом. /home - содержит домашние каталоги пользователей, которые обычно имеют имена соответствующие регистрационным именам пользователей. Например, для пользователя vasilev будет создан домашний каталог vasilev. Такое соответствие удобно с точки зрения эффективного управления и навигации в файловой системе, например с помощью команды cd. Самой главной особенностью домашнего каталога является то, что он находится в собственности соответствующего пользователя. Собственник каталога может установить произвольный набор атрибутов доступа, вплоть до полного запрета каких-либо операций с файлами данного каталога для всех категорий пользователей, за исключением суперпользователя. Заключение В лекции были рассмотрены основные коцепции организации хранения данных в ОС Unix: детальное описание файловой структуры Unix, основные понятия файла и каталога. Методические рекомендации преподавателю по проведению лекции: Лекции составляют основу теоретического обучения и дают систематизированные основы научных знаний по дисциплине «Операционные системы», раскрывают состояние и перспективы развития соответствующей предметной области, концентрируют внимание обучающихся на наиболее сложных и узловых вопросах, стимулируют их активную познавательную деятельность и способствуют формированию творческого мышления. Ведущим методом в лекции выступает устное изложение учебного материала, сопровождающееся демонстрацией мультимедийных слайдов, видеофильмов, схем, плакатов, показом программных моделей, макетов программного обеспечения подсистем изучаемых операционных систем. При проведении лекции рекомендуется использовать следующие методические приемы: 1. Предварительная целевая ориентация каждого изучаемого вопроса с приведением примеров из практики. 2. Систематизация, предполагающая выявление, анализ, классификацию и учет всех факторов, влияющих на результат. 3. Последовательная многоуровневая декомпозиция материала. 4. Многомодельное рассмотрение изучаемых вопросов. 5. Абстрагирование, предполагающее отвлечение от несущественных деталей. 6. Осмысливание и закрепление изучаемого материала. Методические рекомендации (задания) для слушателей и курсантов: В ходе лекционных занятий вести конспектирование учебного материала. Обращать внимание на категории, формулировки, раскрывающие содержание тех или иных явлений и процессов, научные выводы и практические рекомендации, положительный опыт в ораторском искусстве. Желательно оставить в рабочих конспектах поля, на которых делать пометки из рекомендованной литературы, дополняющие материал прослушанной лекции, а также подчеркивающие особую важность тех или иных теоретических положений. Задавать преподавателю уточняющие вопросы с целью уяснения теоретических положений, разрешения спорных ситуаций. подполковник А.Киселев (воинское звание, подпись, инициал имени, фамилия автора) «_____» ___________ 20_ г. 